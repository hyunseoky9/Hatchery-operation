sin(0)
sin(pi)
sin(pi/2)
source("G:/My Drive/research/nmsu/hatchery operation/codes/dynamic programming1/function_approximation_datagen.R", echo=TRUE)
source("G:/My Drive/research/nmsu/hatchery operation/codes/dynamic programming1/function_approximation_datagen.R")
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Verify the working directory
getwd()
# Function to generate dataset
generate_data <- function(samples = 10000) {
# Generate random inputs for the 6 variables
x1 <- runif(samples, -pi, pi)    # Uniform random between -π and π
x2 <- runif(samples, -pi, pi)    # Uniform random between -π and π
x3 <- runif(samples, 1, 10)      # Uniform random between 1 and 10
x4 <- runif(samples, 1, 10)      # Uniform random between 1 and 10
x5 <- runif(samples, -1, 1)      # Uniform random between -1 and 1
x6 <- runif(samples, -1, 1)      # Uniform random between -1 and 1
# Compute the target function
y <- sin(x1) + x2^2 - log(abs(x3) + 1) + exp(x4) - x5 * x6
# Combine inputs and output into a data frame
dataset <- data.frame(x1, x2, x3, x4, x5, x6, y)
return(dataset)
}
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Verify the working directory
getwd()
install.packages("here")
library(here)
library(here)
setwd(here::here())
# Verify the working directory
getwd()
setwd(here::here())
# Verify the working directory
getwd()
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
install.packages('rstudioapi')
library(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Verify the working directory
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Verify the working directory
getwd()
# Function to generate dataset
generate_data <- function(samples = 10000) {
# Generate random inputs for the 6 variables
x1 <- runif(samples, -pi, pi)    # Uniform random between -π and π
x2 <- runif(samples, -pi, pi)    # Uniform random between -π and π
x3 <- runif(samples, 1, 10)      # Uniform random between 1 and 10
x4 <- runif(samples, 1, 10)      # Uniform random between 1 and 10
x5 <- runif(samples, -1, 1)      # Uniform random between -1 and 1
x6 <- runif(samples, -1, 1)      # Uniform random between -1 and 1
# Compute the target function
y <- sin(x1) + x2^2 - log(abs(x3) + 1) + exp(x4) - x5 * x6
# Combine inputs and output into a data frame
dataset <- data.frame(x1, x2, x3, x4, x5, x6, y)
return(dataset)
}
# Generate dataset with 10,000 samples
dataset <- generate_data(10000)
# Save to CSV if needed
write.csv(dataset, "generated_dataset.csv", row.names = FALSE)
